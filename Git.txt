                                 Git 
            -----------------------------------
---------------Basic Information-------------

remote -> GitHub
local -> pc/Laptop
ls (list files and folders)
ls -a (list files and folders even though hidden files)

Untracked - new files that git doesn't yet track
Modified - Changed
Staged - file is ready to be commited
Unmidified - Unchanged

           (engagement)   (Wedding)
changes -> Add file -> commit
                   (Staged)


xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
git config --global user.name " "
git config --global user.email " "
git config --list

Clone & Status
----------------------------
Clone - Cloning a repository on our local machine.
git clone <some link>

Status - displays the state of the code.
git status

--------------Add & Commit--------------
add - adds new or changed files in your working directory to the Git staging area.
git add . ( . means add all the file at a time)
git add <file name>

Commit - it is the record of change
git commit -m "some message"

----------------Push Command-------------
Push - upload local repo content to the remote repo
git push origin main

---------------Init Command---------------
init - used to ceate a new git repo
git init
git remote add origin <- link ->
git remote -v ( to verify remote )
git branch      ( to check branch )
git branch -M main ( to rename branch )
git push origin main

git push -u origin main 
u Means set upstream and then after only write git push then automatically upload the file on main branch, no need to write git push origin main again and again.

------------Branch Commands----------
git branch ( to check branch )
git branch -M main ( to rename branch )
git checkout <branch name> ( to navigate )
git checkout -b <- to new branch name -> ( to create new branch )
git branch -d <- branch name -> ( to delete branch )

NOTE : We cannot delete the branch without checkout, first checkout then can delete.

--------------Mergining code-------------
way 1
git diff<branch name> (to compare commits, branches, files & more)

git merge<branch name> (to merge two branches)

Way 2
Create a PR(pull request using GUI of github)
-> it lets you tell others about changes you've pushed to a branch in a repository on GitHub.

---------------Pull Commnad--------------
git pull origin main

it is used to fetch and download content from a remote repo and immediately update the local repo to match that content.

Resolving Merge Conflicts:-
An event that takes place when Git is unable to automatically resolve differences in code between two commits.

--------------Undoing Changes: -------------
Case 1: Staged changes
         git reset <file name> (in single file)
         git reset (for multiple file)
Case 2: Commited changes(for one commit)
          git reset HEAD~1
Case 3: Commited changes(for many commits)
           git reset <commit hash>
           git reset --hard <commit hash>

git log (used to either check the commit hash or commited log. how many have commited)

press q or Q to exit from the log terminals.

Fork: 
A fork is a new repo that shares code and visibility settings with the origial "upstream" repository.
Fork is a rough copy.

Work flow of Local Git
Create Repo
Cone
Changes
Add
commit
push on GitHub